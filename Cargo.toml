[package]
name = "netlify-ddns"
version = "0.3.1-alpha.0"
authors = ["Luke Hsiao <lwhsiao@stanford.edu>"]
edition = "2018"
description = "A simple CLI tool for setting Netlify DNS records dynamically."
repository = "https://github.com/lukehsiao/netlify-ddns-rs"
readme = "README.md"
license = "Apache-2.0 OR MIT"
categories = ["command-line-utilities"]
keywords = ["dynamic", "ddns", "dns", "netlify", "networking"]

[badges]
# Maintenance: `status` is required. Available options are:
# - `actively-developed`: New features are being added and bugs are being fixed.
# - `passively-maintained`: There are no plans for new features, but the maintainer intends to
#   respond to issues that get filed.
# - `as-is`: The crate is feature complete, the maintainer does not intend to continue working on
#   it or providing support, but it works for the purposes it was designed for.
# - `experimental`: The author wants to share it with the community but is not intending to meet
#   anyone's particular use case.
# - `looking-for-maintainer`: The current maintainer would like to transfer the crate to someone
#   else.
# - `deprecated`: The maintainer does not recommend using this crate (the description of the crate
#   can describe why, there could be a better solution available or there could be problems with
#   the crate that the author does not want to fix).
# - `none`: Displays no badge on crates.io, since the maintainer has not chosen to specify
#   their intentions, potential crate users will need to investigate on their own.
maintenance = { status = "passively-maintained" }

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
anyhow = "1.0.38"
futures = "0.3.12"
log = "0.4.13"
pretty_env_logger = "0.4.0"
serde = { version = "1.0.118", features = ["derive"] }
serde_json = "1.0.61"
structopt = "0.3.21"
thiserror = "1.0.23"
ureq = { version = "2.0.1", features = ["tls"] }

[dev-dependencies]
mockito = "0.28.0"

[profile.release]
debug = false

[package.metadata.release]
pre-release-commit-message = "chore: version {{version}}"
post-release-commit-message = "chore: bump development version to {{next_version}}"
tag-message = "{{crate_name}} {{version}}"
